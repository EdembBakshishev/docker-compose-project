# services:
#   nginx:
#     image: nginx:alpine
#     restart: unless-stopped
#     volumes:
#       - ./data/nginx:/etc/nginx/conf.d
#       - ./data/certbot/conf:/etc/letsencrypt
#       - ./data/certbot/www:/var/www/certbot
#       - ./public:/usr/share/nginx/html
#     ports:
#       - "80:80"
#       - "443:443"

#   certbot:
#     image: certbot/certbot
#     restart: unless-stopped
#     volumes:
#       - ./data/certbot/conf:/etc/letsencrypt
#       - ./data/certbot/www:/var/www/certbot

services:
  nginx:
    image: nginx:1.17
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./public:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: smmhub
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  server:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://user:password@db/smmhub
    command: sh -c "python init_db.py && python server.py"

volumes:
  postgres_data:





