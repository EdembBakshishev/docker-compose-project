# name: CI/CD Docker Compose

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Deploy via rsync
#       uses: burnett01/rsync-deployments@5.1
#       with:
#         switches: -avz --delete --exclude=myenv --exclude=.git --exclude=.github --exclude=data/certbot/conf/renewal-hooks
#         path: ./
#         remote_path: /home/ubuntu/Docker-compose-project
#         remote_host: ${{ secrets.EC2_HOST }}
#         remote_user: ${{ secrets.EC2_USER }}
#         remote_key: ${{ secrets.EC2_KEY }}

#     - name: Restart docker-compose on EC2
#       uses: appleboy/ssh-action@v0.1.10
#       with:
#         host: ${{ secrets.EC2_HOST }}
#         username: ${{ secrets.EC2_USER }}
#         key: ${{ secrets.EC2_KEY }}
#         script: |
#           cd ~/Docker-compose-project
#           docker compose down
#           docker compose up -d --build

name: CI/CD with ECR and EC2

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

    - name: Build, tag, and push image to Amazon ECR
      run: |
        IMAGE=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
        docker build -t $IMAGE .
        docker push $IMAGE

    - name: Deploy on EC2 via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
          docker pull ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          cd ~/Docker-compose-project
          docker compose down
          docker compose up -d
